<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2012-2018 Red Hat, Inc.
    This program and the accompanying materials are made
    available under the terms of the Eclipse Public License 2.0
    which is available at https://www.eclipse.org/legal/epl-2.0/

    SPDX-License-Identifier: EPL-2.0

    Contributors:
      Red Hat, Inc. - initial API and implementation

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>org-eclipse-che-jdt-ls-extension</artifactId>
        <groupId>org.eclipse.che.ls.jdt</groupId>
        <version>0.0.2-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <artifactId>jdt.ls.extension.product</artifactId>
    <packaging>eclipse-repository</packaging>
    <name>Che Ls Jdt :: Extension :: Product</name>
    <properties>
        <maven.build.timestamp.format>yyyyMMddHHmm</maven.build.timestamp.format>
        <timestamp>${maven.build.timestamp}</timestamp>
        <tycho.version>1.0.0</tycho.version>
    </properties>
    <build>
        <plugins>
            <plugin>
                <groupId>org.eclipse.tycho</groupId>
                <artifactId>tycho-p2-plugin</artifactId>
                <version>${tycho.version}</version>
            </plugin>
            <plugin>
                <groupId>org.eclipse.tycho</groupId>
                <artifactId>tycho-p2-publisher-plugin</artifactId>
                <version>${tycho.version}</version>
            </plugin>
            <plugin>
                <groupId>org.eclipse.tycho</groupId>
                <artifactId>tycho-p2-repository-plugin</artifactId>
                <version>${tycho.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>archive-repository</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includeAllDependencies>true</includeAllDependencies>
                    <compress>false</compress>
                    <skipArchive>true</skipArchive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.eclipse.tycho</groupId>
                <artifactId>tycho-p2-director-plugin</artifactId>
                <version>${tycho.version}</version>
                <executions>
                    <execution>
                        <id>create-distributions</id>
                        <goals>
                            <goal>materialize-products</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <formats>
                        <macosx>tar.gz</macosx>
                    </formats>
                    <products>
                        <product>
                            <id>languageServer.product</id>
                        </product>
                    </products>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <id>copy-config-mac</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/repository/config_mac</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/target/products/languageServer.product/macosx/cocoa/x86_64/Eclipse.app/Contents/Eclipse/configuration</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-config-win</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/repository/config_win</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/target/products/languageServer.product/win32/win32/x86_64/configuration</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-config-linux</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/repository/config_linux</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/target/products/languageServer.product/linux/gtk/x86_64/configuration</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.25.2</version>
                <configuration>
                    <images>
                        <image>
                            <alias>che-jdt-ls</alias>
                            <name>che-jdt-ls/java-ls:latest</name>
                            <build>
                                <from>adoptopenjdk/openjdk10-openj9:alpine-nightly</from>
                                <assembly>
                                    <mode>dir</mode>
                                    <name>/jdtls/</name>
                                    <descriptor>/publish-assembly.xml</descriptor>
                                </assembly>
                                <runCmds>
                                    <runCmd>apk add --update socat</runCmd>
                                </runCmds>
                                <ports>
                                    <port>5555</port>
                                </ports>
                                <workdir>/jdtls</workdir>
                                <cmd>socat TCP4-LISTEN:5555,reuseaddr,fork EXEC:"java -Declipse.application=org.eclipse.jdt.ls.core.id1     -Dosgi.bundles.defaultStartLevel=4     -Declipse.product=org.eclipse.jdt.ls.core.product -noverify     -Xmx1G     -jar /jdtls/plugins/org.eclipse.equinox.launcher_*    -configuration ./config_linux     -data /home/user/jdtls/data"</cmd>
                            </build>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>server-distro</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <!-- generate .sha256 file -->
                    <plugin>
                        <groupId>net.ju-n.maven.plugins</groupId>
                        <artifactId>checksum-maven-plugin</artifactId>
                        <version>1.2</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>files</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <quiet>true</quiet>
                            <csvSummary>false</csvSummary>
                            <algorithms>
                                <algorithm>SHA-256</algorithm>
                            </algorithms>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.build.directory}/distro</directory>
                                    <includes>
                                        <include>**/*.gz</include>
                                    </includes>
                                </fileSet>
                            </fileSets>
                        </configuration>
                    </plugin>
                    <!-- clean leftovers from previous runs -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-clean-plugin</artifactId>
                        <version>3.0.0</version>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>${project.build.directory}/distro</directory>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>2.6</version>
                        <executions>
                            <execution>
                                <id>pack-for-distribution</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${project.build.directory}/distro</outputDirectory>
                                    <!-- define custom output filename -->
                                    <finalName>che-jdt-language-server-${project.version}-${timestamp}</finalName>
                                    <appendAssemblyId>false</appendAssemblyId>
                                    <descriptors>
                                        <descriptor>publish-assembly.xml</descriptor>
                                    </descriptors>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>fast</id>
            <!-- 
			Enable faster builds by targeting a single TP environment.
			Run the Maven command with specific environment properties:
			- On MacOS : mvn clean verify -Pfast -Denvironment.os=macosx -Denvironment.ws=cocoa -Denvironment.arch=x86_64
			- On Win32 : mvn clean verify -Pfast -Denvironment.os=win32 -Denvironment.ws=win32 -Denvironment.arch=x86
			- On Win64 : mvn clean verify -Pfast -Denvironment.os=win32 -Denvironment.ws=win32 -Denvironment.arch=x86_64
			- On Linux : mvn clean verify -Pfast -Denvironment.os=linux -Denvironment.ws=gtk -Denvironment.arch=x86_64
			
			 -->
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.eclipse.tycho</groupId>
                        <artifactId>target-platform-configuration</artifactId>
                        <version>${tycho.version}</version>
                        <configuration>
                            <environments>
                                <environment>
                                    <os>${environment.os}</os>
                                    <ws>${environment.ws}</ws>
                                    <arch>${environment.arch}</arch>
                                </environment>
                            </environments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
